---
interface Props {
  title: string;
  description?: string;
}

const { title, description = "Portfolio website of James, showcasing UX/UI design and product management work" } = Astro.props;

import '../styles/global.css';
import Header from '../components/Header.astro';
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <Header />
    <main>
      <slot />
    </main>
  </body>
</html>

<style is:global>
  :root {
    --accent: 136, 58, 234;
    --accent-light: 224, 204, 250;
    --accent-dark: 49, 10, 101;
    --accent-gradient: linear-gradient(
      45deg,
      rgb(var(--accent)),
      rgb(var(--accent-light)) 30%,
      white 60%
    );
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  html {
    font-family: system-ui, sans-serif;
    background: #fff;
    background-size: 224px;
  }

  .section {
    padding: 80px 0;
  }

  .button {
    display: inline-flex;
    align-items: center;
    padding: 12px 24px;
    background-color: #000;
    color: #fff;
    text-decoration: none;
    border-radius: 4px;
    transition: background-color 0.2s;
  }

  .button:hover {
    background-color: #333;
  }

  .menu-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background-color: #000;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    z-index: 30;
  }

  .menu-overlay.active {
    opacity: 1;
    visibility: visible;
  }

  .nav-link {
    font-size: 3rem;
    color: #fff;
    text-decoration: none;
    transition: color 0.2s;
  }

  .nav-link:hover {
    color: #ccc;
  }

  .nav-link-small {
    color: #fff;
    text-decoration: none;
    font-size: 1rem;
    transition: color 0.2s;
  }

  .nav-link-small:hover {
    color: #ccc;
  }

  .work-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
  }

  .fade-up {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s, transform 0.6s;
  }

  .fade-up.visible {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  import Lenis from '@studio-freight/lenis';

  // Initialize smooth scroll
  const lenis = new Lenis();

  function raf(time: number) {
    lenis.raf(time);
    requestAnimationFrame(raf);
  }

  requestAnimationFrame(raf);

  // Fade up animation
  const observerOptions = {
    root: null,
    rootMargin: '0px',
    threshold: 0.1
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('visible');
      }
    });
  }, observerOptions);

  document.querySelectorAll('.fade-up').forEach((element) => {
    observer.observe(element);
  });
</script>